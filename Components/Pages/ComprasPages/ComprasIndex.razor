@page "/Compras/Index"
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@inject ComprasService comprasService
@inject IToastService toastService

<PageTitle>Ordenes de Compra</PageTitle>

<div class="header-section mt-5">
    <div class="row d-flex justify-content-between">
        <div class="col-auto">
            <h3 class="fw-semibold">Compras</h3>
        </div>
        <div class="col mb-3">
            <div class="d-flex justify-content-end">
                <input class="form-control shadow-sm text-secondary w-25" placeholder="Buscar..." />
                <div class="dropdown">
                    <button type="button" class="btn btn-outline bi bi-bell text-secondary shadow-sm ms-4 bg-white" data-bs-toggle="dropdown" aria-expanded="false">
                    </button>
                    <div class=" shadow-sm dropdown-menu dropdown-menu-end p-4 mt-2" style="width: 350px; height: 400px; overflow-y: auto;">
                        <div class="mb-3">

                            <div class="bg-danger-subtle border border-danger-subtle rounded-3 p-2 mb-2">
                                <label class="bi bi-bell text-danger-emphasis"> <strong class="ms-2"> Productos apunto de vencer</strong></label>
                                <p class="fw-light">Algunos productos están apunto de vencer</p>
                            </div>

                            <div class="bg-primary-subtle border border-primary-subtle rounded-3 p-2 mb-2">
                                <label class="bi bi-bell text-primary-emphasis"> <strong class="ms-2"> Hemos actualizado nuestras políticas</strong></label>
                                <p class="fw-light">Mira cuales son las novedades</p>
                            </div>

                            <div class="bg-success-subtle border border-success-subtle rounded-3 p-2 mb-2">
                                <label class="bi bi-bell text-success-emphasis"> <strong class="ms-2"> Reporte enviado</strong></label>
                                <p class="fw-light">Su reporte ha sido enviado exitosamente</p>
                            </div>

                            <div class="bg-danger-subtle border border-danger-subtle rounded-3 p-2 mb-2">
                                <label class="bi bi-bell text-danger-emphasis"> <strong class="ms-2"> Productos apunto de vencer</strong></label>
                                <p class="fw-light">Algunos productos están apunto de vencer</p>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row d-flex justify-content-between mt-4">
        <div class="col-auto">
            <button type="button" class="btn btn-outline @(filtro == "Resumen" ? "btn-custom-primary" : "text-secondary")" @onclick="() => FiltrarOrdenes(Resumen)">Resumen</button>
            <button type="button" class="btn btn-outline @(filtro == "Aceptadas" ? "btn-custom-primary" : "text-secondary") ms-4" @onclick="() => FiltrarOrdenes(Aceptada)" >Aceptadas</button>
            <button type="button" class="btn btn-outline @(filtro == "Pendientes" ? "btn-custom-primary" : "text-secondary") ms-4" @onclick="() => FiltrarOrdenes(Pendiente)">Pendientes</button>
            <button type="button" class="btn btn-outline @(filtro == "Canceladas" ? "btn-custom-primary" : "text-secondary") ms-4" @onclick="() => FiltrarOrdenes(Cancelada)">Canceladas</button>
        </div>
        <div class="col-auto">
            <div class="d-flex justify-content-around align-items-lg-baseline">
                @*Dropdown*@
                <div class="dropdown">
                    <button class="btn btn-outline dropdown-toggle shadow-sm bg-white" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Filtrar por
                    </button>
                    <div class="dropdown-menu dropdown-menu-end p-4 mt-2" style="width: 300px;">
                        <div class="mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="filtro" value="titulo">
                                <label class="form-check-label">Título de Orden de Compra</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="filtro" value="numero">
                                <label class="form-check-label">Número de Orden de Compra</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="filtro" value="proveedor">
                                <label class="form-check-label">Proveedor</label>
                            </div>
                        </div>

                        <hr />

                        <div class="mb-3">
                            <label class="mb-3"><strong>Fecha</strong></label>
                            <div class="row d-flex justify-content-center">
                                <div class="col-auto">
                                    <label class="d-flex justify-content-center">Desde</label>
                                    <input type="date" class="form-control mb-2" @bind="fechaDesde" placeholder="Desde" />
                                </div>
                                <div class="col-auto">
                                    <label class=" d-flex justify-content-center">Hasta</label>
                                    <input type="date" class="form-control" @bind="fechaHasta" placeholder="Hasta" />
                                </div>
                            </div>
                        </div>

                        <hr />

                        <div class="mb-3">
                            <label><strong>Precio</strong></label>
                            <input type="range" class="form-range" min="0" max="1000000" step="10000" @bind="precio" />
                            <small class="text-muted">RD$0 - RD$@precio.ToString("N0")</small>
                        </div>
                        <div class="d-flex justify-content-center">
                            <button class="btn btn-secondary bi bi-x-lg"> Limpiar</button>
                            <button class="btn btn-primary bi bi-search shadow-sm ms-2" @onclick="Buscar">
                                Buscar
                            </button>
                        </div>

                    </div>
                </div>
                <a href="/Compras/Create" class="btn btn-success ms-4 shadow-sm d-flex align-items-center">
                    <i class="bi bi-plus-circle me-2"></i> Crear
                </a>
            </div>

        </div>
    </div>
</div>

<div class="container mt-4">
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach(var ordenCompra in OrdenesCompra)
        {
            <div class="col">
                <div class="card shadow-sm h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start">
                            <h5 class="card-title">@ordenCompra.NumeroOrden</h5>
                            <div class="estado-orden @(ordenCompra.EstadoOrdenCompra?.Nombre?.ToLower() switch {
                                "pendiente" => "estado-pendiente",
                                "aceptada" => "estado-aceptada",
                                "cancelada" => "estado-cancelada",
                                _ => "estado-default"
                            })"></div>
                        </div>
                        <h6 class="card-subtitle mb-2 text-muted">@ordenCompra.Proveedor?.Nombre</h6>
                        <div class="mt-3">
                            <p class="mb-1">
                                <i class="bi bi-calendar3"></i>
                                <small class="text-muted ms-2">@ordenCompra.FechaCreacion.ToString("dd/MM/yyyy")</small>
                            </p>
                            <p class="mb-1">
                                <i class="bi bi-person"></i>
                                <small class="text-muted ms-2">@ordenCompra.Usuario?.Nombre</small>
                            </p>

                                <p class="mb-1">
                                    <i class="bi bi-truck"></i>
                                    <small class="text-muted ms-2">Entrega: @ordenCompra.FechaEntregaEstimada.ToString("dd/MM/yyyy")</small>
                                </p>

                        </div>
                    </div>
                    <div class="card-footer bg-transparent">
                        <div class="d-flex justify-content-between align-items-center">
                            <strong class="text-success">RD$ @ordenCompra.Total.ToString("N2")</strong>
                            <a href="/Compras/Edit/@ordenCompra.OrdenCompraId" class="btn btn-outline-success btn-sm">
                                <i class="bi bi-pencil"></i> Editar
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private string filtro { get; set; } = "Resumen";
    private string filtroSeleccionado { get; set; } = "titulo";
    private DateTime? fechaDesde { get; set; }
    private DateTime? fechaHasta { get; set; }
    private int precio { get; set; } = 1000000;

    private List<OrdenCompra> OrdenesCompra = new List<OrdenCompra>();
    private List<OrdenCompra> TodasLasOrdenes = new List<OrdenCompra>();

    public string Resumen = "Resumen";
    public string Aceptada = "Aceptadas";
    public string Pendiente = "Pendientes";
    public string Cancelada = "Canceladas";

    protected override async Task OnInitializedAsync()
    {
        TodasLasOrdenes = await comprasService.Listar(o => true);
        FiltrarOrdenes("Resumen");

        // Check for success parameter from the URL
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query).TryGetValue("success", out var successValue))
        {
            if (successValue == "true")
            {
                toastService.ShowSuccess("Orden de compra guardada exitosamente.");
            }
            // Optional: Clean up the URL so the toast doesn't show again on refresh
            NavigationManager.NavigateTo("/Compras/Index", replace: true);
        }

        if (OrdenesCompra.Count == 0)
        {
            toastService.ShowInfo("No se encontró ninguna orden");
        }
        StateHasChanged();
    }

    private void FiltrarOrdenes(string tipoFiltro)
    {
        filtro = tipoFiltro;

        OrdenesCompra = tipoFiltro switch
        {
            "Resumen" => TodasLasOrdenes,
            "Aceptadas" => TodasLasOrdenes.Where(o => o.EstadoOrdenCompra?.Nombre?.ToLower() == "aceptada").ToList(),
            "Pendientes" => TodasLasOrdenes.Where(o => o.EstadoOrdenCompra?.Nombre?.ToLower() == "pendiente").ToList(),
            "Canceladas" => TodasLasOrdenes.Where(o => o.EstadoOrdenCompra?.Nombre?.ToLower() == "cancelada").ToList(),
            _ => TodasLasOrdenes
        };

        StateHasChanged();
    }

    private void Buscar()
    {
        Console.WriteLine($"Filtro: {filtroSeleccionado}, Fecha: {fechaDesde} - {fechaHasta}, Precio: {precio}");
    }
}