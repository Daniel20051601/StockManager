@page "/Proveedores/Index"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations

<PageTitle>Proveedores</PageTitle>

<style>
    .table-striped-custom tbody tr:nth-child(odd) {
        background-color: #ffffff;
    }

    .table-striped-custom tbody tr:nth-child(even) {
        background-color: #f2f2f2;
    }
</style>

<div class="mt-5">

    <div class="row mb-5">
        <div class="col">
            <h3 class="fw-semibold">Proveedores</h3>
        </div>
        <div class="col-auto d-flex align-items-center gap-3">
            <input class="form-control shadow-sm text-secondary" style="width: 250px;" placeholder="Buscar..." @bind="searchTerm" @oninput="OnSearchChanged" />
            <a href="#" class="btn btn-outline bi bi-bell text-secondary shadow-sm"></a>
        </div>
    </div>

    <div class="row d-flex justify-content-between mb-5">
        <div class="col-auto">
            <button type="button" class="btn btn-outline">Resumen</button>
            <button type="button" class="btn btn-outline text-secondary ms-4">Solicitudes</button>
            <button type="button" class="btn btn-outline text-secondary ms-4">Notificaciones</button>
        </div>
        <div class="col-auto">
            <div class="d-flex align-items-center">
                <a href="/Proveedores/Nuevo" class="btn btn-success shadow-sm d-flex align-items-center">
                    <i class="bi bi-plus-circle me-2"></i> Agregar
                </a>
                <div class="dropdown ms-3">
                    <button class="btn btn-outline dropdown-toggle shadow-sm" type="button" data-bs-toggle="dropdown">
                        Estado
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" @onclick='() => FilterByStatus("activo")'>Activos</a></li>
                        <li><a class="dropdown-item" href="#" @onclick='() => FilterByStatus("inactivo")'>Inactivos</a></li>
                        <li><a class="dropdown-item" href="#" @onclick='() => FilterByStatus("todos")'>Todos</a></li>
                    </ul>

                </div>
            </div>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col">
            <h5 class="fw-semibold text-dark">Lista de proveedores</h5>
        </div>
    </div>

    <div class="table-responsive mt-4">
        <table class="table table-hover align-middle shadow-sm table-striped-custom">
            <thead class="table-light">
                <tr>
                    <th style="width: 180px;">Nombre</th>
                    <th style="width: 150px;">Contacto</th>
                    <th style="width: 130px;">Teléfono</th>
                    <th style="width: 200px;">Email</th>
                    <th style="width: 200px;">Dirección</th>
                    <th style="width: 100px;">Estado</th>
                    <th style="width: 100px;">Productos</th>
                    <th style="width: 150px;">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var proveedor in filteredProveedores)
                {
                    <tr>
                        <td>@proveedor.Nombre</td>
                        <td>@proveedor.Contacto</td>
                        <td>@proveedor.Telefono</td>
                        <td>@proveedor.Email</td>
                        <td>@proveedor.Direccion</td>
                        <td>
                            <span class="badge @(proveedor.Estado ? "bg-success" : "bg-secondary")">
                                @(proveedor.Estado ? "Activo" : "Inactivo")
                            </span>
                        </td>
                        <td><span class="badge bg-light text-dark">@proveedor.CantidadProductos</span></td>
                        <td>
                            <a href="/Proveedores/Editar/@proveedor.Id" class="btn btn-success btn-sm me-1">Editar</a>
                            <button class="btn btn-danger btn-sm" @onclick="() => EliminarProveedor(proveedor.Id)">Eliminar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-end mt-3">
        <nav>
            <ul class="pagination">
                <li class="page-item"><a class="page-link" href="#">Anterior</a></li>
                <li class="page-item active"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">Siguiente</a></li>
            </ul>
        </nav>
    </div>

</div>

@code {
    public class Proveedor
    {
        public int Id { get; set; }
        public string Nombre { get; set; } = string.Empty;
        public string Contacto { get; set; } = string.Empty;
        public string Telefono { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string Direccion { get; set; } = string.Empty;
        public bool Estado { get; set; }
        public int CantidadProductos { get; set; }
    }

    private List<Proveedor> proveedores = new();
    private List<Proveedor> filteredProveedores = new();
    private string searchTerm = string.Empty;
    private string statusFilter = "todos";

    protected override void OnInitialized()
    {

        proveedores = new List<Proveedor>
        {
            new Proveedor { Id = 1, Nombre = "Agua Randy", Contacto = "Luis Fernández", Telefono = "(809) 555-0104", Email = "distribucion@aguarandy.do", Direccion = "Calle Principal, Los Alcarrizos", Estado = true, CantidadProductos = 12 },
            new Proveedor { Id = 2, Nombre = "Sosua Import", Contacto = "Ana García", Telefono = "(809) 555-0105", Email = "info@sosuaimport.com", Direccion = "Puerto Plata, Sosúa", Estado = true, CantidadProductos = 15 },
            new Proveedor { Id = 3, Nombre = "Ley's Dominican Republic", Contacto = "Pedro Martínez", Telefono = "(809) 555-0103", Email = "pedidos@leysdr.com", Direccion = "Km 22 Autopista Duarte", Estado = false, CantidadProductos = 0 },
            new Proveedor { Id = 4, Nombre = "Pescadería Mar y Sol", Contacto = "José Morales", Telefono = "(809) 555-0107", Email = "pedidos@marysol.do", Direccion = "Malecón de Puerto Plata", Estado = true, CantidadProductos = 6 },
            new Proveedor { Id = 5, Nombre = "Lacteo Caribe", Contacto = "Roberto Jiménez", Telefono = "(809) 555-0106", Email = "ventas@lacteocaribe.do", Direccion = "Av. 27 de Febrero, Santiago", Estado = false, CantidadProductos = 0 }
        };

        ApplyFilters();
    }

    private void OnSearchChanged(ChangeEventArgs e)
    {
        searchTerm = e.Value?.ToString() ?? string.Empty;
        ApplyFilters();
    }

    private void FilterByStatus(string status)
    {
        statusFilter = status;
        ApplyFilters();
    }

    private void ApplyFilters()
    {
        filteredProveedores = proveedores.Where(p =>
            (string.IsNullOrEmpty(searchTerm) ||
             p.Nombre.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
             p.Contacto.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
             p.Email.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)) &&
            (statusFilter == "todos" ||
             (statusFilter == "activo" && p.Estado) ||
             (statusFilter == "inactivo" && !p.Estado))
        ).ToList();
    }

    private void EliminarProveedor(int id)
    {
        var proveedor = proveedores.FirstOrDefault(p => p.Id == id);
        if (proveedor != null)
        {
            proveedores.Remove(proveedor);
            ApplyFilters();
        }
    }


    public void ActualizarProveedor(Proveedor proveedorActualizado)
    {
        var index = proveedores.FindIndex(p => p.Id == proveedorActualizado.Id);
        if (index != -1)
        {
            proveedores[index] = proveedorActualizado;
            ApplyFilters();
            StateHasChanged();
        }
    }
}